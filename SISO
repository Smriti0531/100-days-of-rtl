
module SISO_Register (
  input wire clk,
  input wire reset,
  input wire serial_in,
  output wire serial_out
);

  reg [3:0] shift_reg;

  always @(posedge clk or posedge reset) begin
    if (reset)
      shift_reg <= 4'b0000; 
    else
      shift_reg <= {shift_reg[2:0], serial_in}; 
  end

  assign serial_out = shift_reg[3]; 

endmodule

module tb_SISO_Register;

  reg clk;
  reg reset;
  reg serial_in;
  wire serial_out;

  SISO_Register uut (
    .clk(clk),
    .reset(reset),
    .serial_in(serial_in),
    .serial_out(serial_out)
  );

  initial begin
    clk = 0;
    reset = 1;
    serial_in = 0;

    #10 reset = 0; 

    #10 serial_in = 1; #10 serial_in = 0; #10 serial_in = 1; #10 serial_in = 0;
    #10 $display("Serial Out: %b", serial_out);

    #10 serial_in = 1; #10 serial_in = 1; #10 serial_in = 1; #10 serial_in = 1;
    #10 $display("Serial Out: %b", serial_out); 

  
    #10 $finish; 
  end

  always #5 clk = ~clk; 

endmodule

